#pragma once

#define NUM_COMMANDS 16
#define MAX_COMMAND_LENGTH 4

typedef enum { TRUE = 1, FALSE = 0 } boolean;

typedef enum { MOV, CMP, ADD, SUB, NOT, CLR, LEA, INC, DEC, JMP, BNE, RED, PRN, JSR, RTS, STOP, UNKNOWN_COMMAND } OpCode;

typedef enum { IMMEDIATE_METHOD = 1, DIRECT_METHOD = 3, REGISTER_DIRECT_METHOD = 5 } OperandMethod;

typedef enum	{					NO_ERROR,
				/* ALLOCATION	*/	ERROR_ALLOCATION_FAILED,
				/* FILES		*/	ERROR_FILE_INVALID, ERROR_FILE_NOT_ASSEMBLY, ERROR_FILE_CANT_WRITE,
				/* MACROS		*/	ERROR_MACRO_INVALID, ERROR_MACRO_UNTERMINATED, ERROR_MACRO_UNSTARTED,
				/* DIRECTIVES	*/	ERROR_DIRECTIVE_UNKNOWN, ERROR_DIRECTIVE_UNSEPARATED,
				/* COMMANDS		*/	ERROR_COMMAND_UNKNOWN,
				/* BINARY		*/	ERROR_DATA_INVALID_INPUT, ERROR_DATA_INVALID_INTEGER,
				/* STRINGS		*/	ERROR_STRING_BAD_FORMAT, ERROR_STRING_INVALID_CHARACTER,
				/* LABELS		*/	ERROR_LABEL_INVALID, ERROR_LABEL_UNDEFINED, ERROR_LABEL_MULTIPLE_DECLARATIONS,
				/* OPERANDS		*/	ERROR_OPERAND_INVALID
				} Error;